# Generated by Django 3.1.3 on 2021-03-29 07:00

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('social_media_api', '0005_auto_20210329_0621'),
    ]

    operations = [
        migrations.CreateModel(
            name='CanadaPosts',
            fields=[
                ('id', models.CharField(db_index=True, max_length=20, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=300)),
                ('content', models.TextField(null=True)),
                ('upvote_ratio', models.FloatField(null=True)),
                ('score', models.IntegerField(null=True)),
                ('num_comments', models.IntegerField(null=True)),
                ('created_on', models.DateTimeField()),
                ('stickied', models.BooleanField(null=True)),
                ('over_18', models.BooleanField(null=True)),
                ('spoiler', models.BooleanField(null=True)),
                ('author_is_gold', models.BooleanField(null=True)),
                ('author_mod', models.BooleanField(null=True)),
                ('author_has_verified_email', models.BooleanField(null=True)),
                ('permalink', models.CharField(max_length=300, null=True)),
                ('author', models.CharField(max_length=300)),
                ('author_created', models.DateTimeField()),
                ('comment_karma', models.IntegerField(null=True)),
                ('subreddit', models.CharField(default='canada', editable=False, max_length=200)),
            ],
            options={
                'verbose_name_plural': 'Canada Subreddit Posts',
                'ordering': ['created_on'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ChinaPosts',
            fields=[
                ('id', models.CharField(db_index=True, max_length=20, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=300)),
                ('content', models.TextField(null=True)),
                ('upvote_ratio', models.FloatField(null=True)),
                ('score', models.IntegerField(null=True)),
                ('num_comments', models.IntegerField(null=True)),
                ('created_on', models.DateTimeField()),
                ('stickied', models.BooleanField(null=True)),
                ('over_18', models.BooleanField(null=True)),
                ('spoiler', models.BooleanField(null=True)),
                ('author_is_gold', models.BooleanField(null=True)),
                ('author_mod', models.BooleanField(null=True)),
                ('author_has_verified_email', models.BooleanField(null=True)),
                ('permalink', models.CharField(max_length=300, null=True)),
                ('author', models.CharField(max_length=300)),
                ('author_created', models.DateTimeField()),
                ('comment_karma', models.IntegerField(null=True)),
                ('subreddit', models.CharField(default='China', editable=False, max_length=200)),
            ],
            options={
                'verbose_name_plural': 'China Subreddit Posts',
                'ordering': ['created_on'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConflictNewsPosts',
            fields=[
                ('id', models.CharField(db_index=True, max_length=20, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=300)),
                ('content', models.TextField(null=True)),
                ('upvote_ratio', models.FloatField(null=True)),
                ('score', models.IntegerField(null=True)),
                ('num_comments', models.IntegerField(null=True)),
                ('created_on', models.DateTimeField()),
                ('stickied', models.BooleanField(null=True)),
                ('over_18', models.BooleanField(null=True)),
                ('spoiler', models.BooleanField(null=True)),
                ('author_is_gold', models.BooleanField(null=True)),
                ('author_mod', models.BooleanField(null=True)),
                ('author_has_verified_email', models.BooleanField(null=True)),
                ('permalink', models.CharField(max_length=300, null=True)),
                ('author', models.CharField(max_length=300)),
                ('author_created', models.DateTimeField()),
                ('comment_karma', models.IntegerField(null=True)),
                ('subreddit', models.CharField(default='ConflictNews', editable=False, max_length=200)),
            ],
            options={
                'verbose_name_plural': 'ConflictNews Subreddit Posts',
                'ordering': ['created_on'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConservativePosts',
            fields=[
                ('id', models.CharField(db_index=True, max_length=20, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=300)),
                ('content', models.TextField(null=True)),
                ('upvote_ratio', models.FloatField(null=True)),
                ('score', models.IntegerField(null=True)),
                ('num_comments', models.IntegerField(null=True)),
                ('created_on', models.DateTimeField()),
                ('stickied', models.BooleanField(null=True)),
                ('over_18', models.BooleanField(null=True)),
                ('spoiler', models.BooleanField(null=True)),
                ('author_is_gold', models.BooleanField(null=True)),
                ('author_mod', models.BooleanField(null=True)),
                ('author_has_verified_email', models.BooleanField(null=True)),
                ('permalink', models.CharField(max_length=300, null=True)),
                ('author', models.CharField(max_length=300)),
                ('author_created', models.DateTimeField()),
                ('comment_karma', models.IntegerField(null=True)),
                ('subreddit', models.CharField(default='Conservative', editable=False, max_length=200)),
            ],
            options={
                'verbose_name_plural': 'Conservative Subreddit Posts',
                'ordering': ['created_on'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CryptoCurrencyPosts',
            fields=[
                ('id', models.CharField(db_index=True, max_length=20, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=300)),
                ('content', models.TextField(null=True)),
                ('upvote_ratio', models.FloatField(null=True)),
                ('score', models.IntegerField(null=True)),
                ('num_comments', models.IntegerField(null=True)),
                ('created_on', models.DateTimeField()),
                ('stickied', models.BooleanField(null=True)),
                ('over_18', models.BooleanField(null=True)),
                ('spoiler', models.BooleanField(null=True)),
                ('author_is_gold', models.BooleanField(null=True)),
                ('author_mod', models.BooleanField(null=True)),
                ('author_has_verified_email', models.BooleanField(null=True)),
                ('permalink', models.CharField(max_length=300, null=True)),
                ('author', models.CharField(max_length=300)),
                ('author_created', models.DateTimeField()),
                ('comment_karma', models.IntegerField(null=True)),
                ('subreddit', models.CharField(default='HongKong', editable=False, max_length=200)),
            ],
            options={
                'verbose_name_plural': 'CryptoCurrency Subreddit Posts',
                'ordering': ['created_on'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DemocratsPosts',
            fields=[
                ('id', models.CharField(db_index=True, max_length=20, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=300)),
                ('content', models.TextField(null=True)),
                ('upvote_ratio', models.FloatField(null=True)),
                ('score', models.IntegerField(null=True)),
                ('num_comments', models.IntegerField(null=True)),
                ('created_on', models.DateTimeField()),
                ('stickied', models.BooleanField(null=True)),
                ('over_18', models.BooleanField(null=True)),
                ('spoiler', models.BooleanField(null=True)),
                ('author_is_gold', models.BooleanField(null=True)),
                ('author_mod', models.BooleanField(null=True)),
                ('author_has_verified_email', models.BooleanField(null=True)),
                ('permalink', models.CharField(max_length=300, null=True)),
                ('author', models.CharField(max_length=300)),
                ('author_created', models.DateTimeField()),
                ('comment_karma', models.IntegerField(null=True)),
                ('subreddit', models.CharField(default='democrats', editable=False, max_length=200)),
            ],
            options={
                'verbose_name_plural': 'Democrats Subreddit Posts',
                'ordering': ['created_on'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EconomicsPosts',
            fields=[
                ('id', models.CharField(db_index=True, max_length=20, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=300)),
                ('content', models.TextField(null=True)),
                ('upvote_ratio', models.FloatField(null=True)),
                ('score', models.IntegerField(null=True)),
                ('num_comments', models.IntegerField(null=True)),
                ('created_on', models.DateTimeField()),
                ('stickied', models.BooleanField(null=True)),
                ('over_18', models.BooleanField(null=True)),
                ('spoiler', models.BooleanField(null=True)),
                ('author_is_gold', models.BooleanField(null=True)),
                ('author_mod', models.BooleanField(null=True)),
                ('author_has_verified_email', models.BooleanField(null=True)),
                ('permalink', models.CharField(max_length=300, null=True)),
                ('author', models.CharField(max_length=300)),
                ('author_created', models.DateTimeField()),
                ('comment_karma', models.IntegerField(null=True)),
                ('subreddit', models.CharField(default='Economics', editable=False, max_length=200)),
            ],
            options={
                'verbose_name_plural': 'Economics Subreddit Posts',
                'ordering': ['created_on'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EnergyPosts',
            fields=[
                ('id', models.CharField(db_index=True, max_length=20, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=300)),
                ('content', models.TextField(null=True)),
                ('upvote_ratio', models.FloatField(null=True)),
                ('score', models.IntegerField(null=True)),
                ('num_comments', models.IntegerField(null=True)),
                ('created_on', models.DateTimeField()),
                ('stickied', models.BooleanField(null=True)),
                ('over_18', models.BooleanField(null=True)),
                ('spoiler', models.BooleanField(null=True)),
                ('author_is_gold', models.BooleanField(null=True)),
                ('author_mod', models.BooleanField(null=True)),
                ('author_has_verified_email', models.BooleanField(null=True)),
                ('permalink', models.CharField(max_length=300, null=True)),
                ('author', models.CharField(max_length=300)),
                ('author_created', models.DateTimeField()),
                ('comment_karma', models.IntegerField(null=True)),
                ('subreddit', models.CharField(default='energy', editable=False, max_length=200)),
            ],
            options={
                'verbose_name_plural': 'Energy Subreddit Posts',
                'ordering': ['created_on'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HongKongPosts',
            fields=[
                ('id', models.CharField(db_index=True, max_length=20, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=300)),
                ('content', models.TextField(null=True)),
                ('upvote_ratio', models.FloatField(null=True)),
                ('score', models.IntegerField(null=True)),
                ('num_comments', models.IntegerField(null=True)),
                ('created_on', models.DateTimeField()),
                ('stickied', models.BooleanField(null=True)),
                ('over_18', models.BooleanField(null=True)),
                ('spoiler', models.BooleanField(null=True)),
                ('author_is_gold', models.BooleanField(null=True)),
                ('author_mod', models.BooleanField(null=True)),
                ('author_has_verified_email', models.BooleanField(null=True)),
                ('permalink', models.CharField(max_length=300, null=True)),
                ('author', models.CharField(max_length=300)),
                ('author_created', models.DateTimeField()),
                ('comment_karma', models.IntegerField(null=True)),
                ('subreddit', models.CharField(default='HongKong', editable=False, max_length=200)),
            ],
            options={
                'verbose_name_plural': 'HongKong Subreddit Posts',
                'ordering': ['created_on'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IndiaPosts',
            fields=[
                ('id', models.CharField(db_index=True, max_length=20, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=300)),
                ('content', models.TextField(null=True)),
                ('upvote_ratio', models.FloatField(null=True)),
                ('score', models.IntegerField(null=True)),
                ('num_comments', models.IntegerField(null=True)),
                ('created_on', models.DateTimeField()),
                ('stickied', models.BooleanField(null=True)),
                ('over_18', models.BooleanField(null=True)),
                ('spoiler', models.BooleanField(null=True)),
                ('author_is_gold', models.BooleanField(null=True)),
                ('author_mod', models.BooleanField(null=True)),
                ('author_has_verified_email', models.BooleanField(null=True)),
                ('permalink', models.CharField(max_length=300, null=True)),
                ('author', models.CharField(max_length=300)),
                ('author_created', models.DateTimeField()),
                ('comment_karma', models.IntegerField(null=True)),
                ('subreddit', models.CharField(default='india', editable=False, max_length=200)),
            ],
            options={
                'verbose_name_plural': 'India Subreddit Posts',
                'ordering': ['created_on'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IsraelPosts',
            fields=[
                ('id', models.CharField(db_index=True, max_length=20, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=300)),
                ('content', models.TextField(null=True)),
                ('upvote_ratio', models.FloatField(null=True)),
                ('score', models.IntegerField(null=True)),
                ('num_comments', models.IntegerField(null=True)),
                ('created_on', models.DateTimeField()),
                ('stickied', models.BooleanField(null=True)),
                ('over_18', models.BooleanField(null=True)),
                ('spoiler', models.BooleanField(null=True)),
                ('author_is_gold', models.BooleanField(null=True)),
                ('author_mod', models.BooleanField(null=True)),
                ('author_has_verified_email', models.BooleanField(null=True)),
                ('permalink', models.CharField(max_length=300, null=True)),
                ('author', models.CharField(max_length=300)),
                ('author_created', models.DateTimeField()),
                ('comment_karma', models.IntegerField(null=True)),
                ('subreddit', models.CharField(default='Israel', editable=False, max_length=200)),
            ],
            options={
                'verbose_name_plural': 'Israel Subreddit Posts',
                'ordering': ['created_on'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='JapanPosts',
            fields=[
                ('id', models.CharField(db_index=True, max_length=20, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=300)),
                ('content', models.TextField(null=True)),
                ('upvote_ratio', models.FloatField(null=True)),
                ('score', models.IntegerField(null=True)),
                ('num_comments', models.IntegerField(null=True)),
                ('created_on', models.DateTimeField()),
                ('stickied', models.BooleanField(null=True)),
                ('over_18', models.BooleanField(null=True)),
                ('spoiler', models.BooleanField(null=True)),
                ('author_is_gold', models.BooleanField(null=True)),
                ('author_mod', models.BooleanField(null=True)),
                ('author_has_verified_email', models.BooleanField(null=True)),
                ('permalink', models.CharField(max_length=300, null=True)),
                ('author', models.CharField(max_length=300)),
                ('author_created', models.DateTimeField()),
                ('comment_karma', models.IntegerField(null=True)),
                ('subreddit', models.CharField(default='japan', editable=False, max_length=200)),
            ],
            options={
                'verbose_name_plural': 'Japan Subreddit Posts',
                'ordering': ['created_on'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='KoreaPosts',
            fields=[
                ('id', models.CharField(db_index=True, max_length=20, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=300)),
                ('content', models.TextField(null=True)),
                ('upvote_ratio', models.FloatField(null=True)),
                ('score', models.IntegerField(null=True)),
                ('num_comments', models.IntegerField(null=True)),
                ('created_on', models.DateTimeField()),
                ('stickied', models.BooleanField(null=True)),
                ('over_18', models.BooleanField(null=True)),
                ('spoiler', models.BooleanField(null=True)),
                ('author_is_gold', models.BooleanField(null=True)),
                ('author_mod', models.BooleanField(null=True)),
                ('author_has_verified_email', models.BooleanField(null=True)),
                ('permalink', models.CharField(max_length=300, null=True)),
                ('author', models.CharField(max_length=300)),
                ('author_created', models.DateTimeField()),
                ('comment_karma', models.IntegerField(null=True)),
                ('subreddit', models.CharField(default='korea', editable=False, max_length=200)),
            ],
            options={
                'verbose_name_plural': 'Korea Subreddit Posts',
                'ordering': ['created_on'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LiberalPosts',
            fields=[
                ('id', models.CharField(db_index=True, max_length=20, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=300)),
                ('content', models.TextField(null=True)),
                ('upvote_ratio', models.FloatField(null=True)),
                ('score', models.IntegerField(null=True)),
                ('num_comments', models.IntegerField(null=True)),
                ('created_on', models.DateTimeField()),
                ('stickied', models.BooleanField(null=True)),
                ('over_18', models.BooleanField(null=True)),
                ('spoiler', models.BooleanField(null=True)),
                ('author_is_gold', models.BooleanField(null=True)),
                ('author_mod', models.BooleanField(null=True)),
                ('author_has_verified_email', models.BooleanField(null=True)),
                ('permalink', models.CharField(max_length=300, null=True)),
                ('author', models.CharField(max_length=300)),
                ('author_created', models.DateTimeField()),
                ('comment_karma', models.IntegerField(null=True)),
                ('subreddit', models.CharField(default='Liberal', editable=False, max_length=200)),
            ],
            options={
                'verbose_name_plural': 'Liberal Subreddit Posts',
                'ordering': ['created_on'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LibertarianPosts',
            fields=[
                ('id', models.CharField(db_index=True, max_length=20, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=300)),
                ('content', models.TextField(null=True)),
                ('upvote_ratio', models.FloatField(null=True)),
                ('score', models.IntegerField(null=True)),
                ('num_comments', models.IntegerField(null=True)),
                ('created_on', models.DateTimeField()),
                ('stickied', models.BooleanField(null=True)),
                ('over_18', models.BooleanField(null=True)),
                ('spoiler', models.BooleanField(null=True)),
                ('author_is_gold', models.BooleanField(null=True)),
                ('author_mod', models.BooleanField(null=True)),
                ('author_has_verified_email', models.BooleanField(null=True)),
                ('permalink', models.CharField(max_length=300, null=True)),
                ('author', models.CharField(max_length=300)),
                ('author_created', models.DateTimeField()),
                ('comment_karma', models.IntegerField(null=True)),
                ('subreddit', models.CharField(default='Libertarian', editable=False, max_length=200)),
            ],
            options={
                'verbose_name_plural': 'Libertarian Subreddit Posts',
                'ordering': ['created_on'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MalaysiaPosts',
            fields=[
                ('id', models.CharField(db_index=True, max_length=20, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=300)),
                ('content', models.TextField(null=True)),
                ('upvote_ratio', models.FloatField(null=True)),
                ('score', models.IntegerField(null=True)),
                ('num_comments', models.IntegerField(null=True)),
                ('created_on', models.DateTimeField()),
                ('stickied', models.BooleanField(null=True)),
                ('over_18', models.BooleanField(null=True)),
                ('spoiler', models.BooleanField(null=True)),
                ('author_is_gold', models.BooleanField(null=True)),
                ('author_mod', models.BooleanField(null=True)),
                ('author_has_verified_email', models.BooleanField(null=True)),
                ('permalink', models.CharField(max_length=300, null=True)),
                ('author', models.CharField(max_length=300)),
                ('author_created', models.DateTimeField()),
                ('comment_karma', models.IntegerField(null=True)),
                ('subreddit', models.CharField(default='malaysia', editable=False, max_length=200)),
            ],
            options={
                'verbose_name_plural': 'Malaysia Subreddit Posts',
                'ordering': ['created_on'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MiddleEastNewsPosts',
            fields=[
                ('id', models.CharField(db_index=True, max_length=20, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=300)),
                ('content', models.TextField(null=True)),
                ('upvote_ratio', models.FloatField(null=True)),
                ('score', models.IntegerField(null=True)),
                ('num_comments', models.IntegerField(null=True)),
                ('created_on', models.DateTimeField()),
                ('stickied', models.BooleanField(null=True)),
                ('over_18', models.BooleanField(null=True)),
                ('spoiler', models.BooleanField(null=True)),
                ('author_is_gold', models.BooleanField(null=True)),
                ('author_mod', models.BooleanField(null=True)),
                ('author_has_verified_email', models.BooleanField(null=True)),
                ('permalink', models.CharField(max_length=300, null=True)),
                ('author', models.CharField(max_length=300)),
                ('author_created', models.DateTimeField()),
                ('comment_karma', models.IntegerField(null=True)),
                ('subreddit', models.CharField(default='MiddleEastNews', editable=False, max_length=200)),
            ],
            options={
                'verbose_name_plural': 'MiddleEastNews Subreddit Posts',
                'ordering': ['created_on'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NeutralPoliticsPosts',
            fields=[
                ('id', models.CharField(db_index=True, max_length=20, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=300)),
                ('content', models.TextField(null=True)),
                ('upvote_ratio', models.FloatField(null=True)),
                ('score', models.IntegerField(null=True)),
                ('num_comments', models.IntegerField(null=True)),
                ('created_on', models.DateTimeField()),
                ('stickied', models.BooleanField(null=True)),
                ('over_18', models.BooleanField(null=True)),
                ('spoiler', models.BooleanField(null=True)),
                ('author_is_gold', models.BooleanField(null=True)),
                ('author_mod', models.BooleanField(null=True)),
                ('author_has_verified_email', models.BooleanField(null=True)),
                ('permalink', models.CharField(max_length=300, null=True)),
                ('author', models.CharField(max_length=300)),
                ('author_created', models.DateTimeField()),
                ('comment_karma', models.IntegerField(null=True)),
                ('subreddit', models.CharField(default='NeutralPolitics', editable=False, max_length=200)),
            ],
            options={
                'verbose_name_plural': 'NeutralPolitics Subreddit Posts',
                'ordering': ['created_on'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NewsPosts',
            fields=[
                ('id', models.CharField(db_index=True, max_length=20, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=300)),
                ('content', models.TextField(null=True)),
                ('upvote_ratio', models.FloatField(null=True)),
                ('score', models.IntegerField(null=True)),
                ('num_comments', models.IntegerField(null=True)),
                ('created_on', models.DateTimeField()),
                ('stickied', models.BooleanField(null=True)),
                ('over_18', models.BooleanField(null=True)),
                ('spoiler', models.BooleanField(null=True)),
                ('author_is_gold', models.BooleanField(null=True)),
                ('author_mod', models.BooleanField(null=True)),
                ('author_has_verified_email', models.BooleanField(null=True)),
                ('permalink', models.CharField(max_length=300, null=True)),
                ('author', models.CharField(max_length=300)),
                ('author_created', models.DateTimeField()),
                ('comment_karma', models.IntegerField(null=True)),
                ('subreddit', models.CharField(default='news', editable=False, max_length=200)),
            ],
            options={
                'verbose_name_plural': 'News Subreddit Posts',
                'ordering': ['created_on'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NorthKoreaNewsPosts',
            fields=[
                ('id', models.CharField(db_index=True, max_length=20, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=300)),
                ('content', models.TextField(null=True)),
                ('upvote_ratio', models.FloatField(null=True)),
                ('score', models.IntegerField(null=True)),
                ('num_comments', models.IntegerField(null=True)),
                ('created_on', models.DateTimeField()),
                ('stickied', models.BooleanField(null=True)),
                ('over_18', models.BooleanField(null=True)),
                ('spoiler', models.BooleanField(null=True)),
                ('author_is_gold', models.BooleanField(null=True)),
                ('author_mod', models.BooleanField(null=True)),
                ('author_has_verified_email', models.BooleanField(null=True)),
                ('permalink', models.CharField(max_length=300, null=True)),
                ('author', models.CharField(max_length=300)),
                ('author_created', models.DateTimeField()),
                ('comment_karma', models.IntegerField(null=True)),
                ('subreddit', models.CharField(default='NorthKoreaNews', editable=False, max_length=200)),
            ],
            options={
                'verbose_name_plural': 'NorthKoreaNews Subreddit Posts',
                'ordering': ['created_on'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NorthKoreaPosts',
            fields=[
                ('id', models.CharField(db_index=True, max_length=20, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=300)),
                ('content', models.TextField(null=True)),
                ('upvote_ratio', models.FloatField(null=True)),
                ('score', models.IntegerField(null=True)),
                ('num_comments', models.IntegerField(null=True)),
                ('created_on', models.DateTimeField()),
                ('stickied', models.BooleanField(null=True)),
                ('over_18', models.BooleanField(null=True)),
                ('spoiler', models.BooleanField(null=True)),
                ('author_is_gold', models.BooleanField(null=True)),
                ('author_mod', models.BooleanField(null=True)),
                ('author_has_verified_email', models.BooleanField(null=True)),
                ('permalink', models.CharField(max_length=300, null=True)),
                ('author', models.CharField(max_length=300)),
                ('author_created', models.DateTimeField()),
                ('comment_karma', models.IntegerField(null=True)),
                ('subreddit', models.CharField(default='northkorea', editable=False, max_length=200)),
            ],
            options={
                'verbose_name_plural': 'North Korea Subreddit Posts',
                'ordering': ['created_on'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PakistanPosts',
            fields=[
                ('id', models.CharField(db_index=True, max_length=20, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=300)),
                ('content', models.TextField(null=True)),
                ('upvote_ratio', models.FloatField(null=True)),
                ('score', models.IntegerField(null=True)),
                ('num_comments', models.IntegerField(null=True)),
                ('created_on', models.DateTimeField()),
                ('stickied', models.BooleanField(null=True)),
                ('over_18', models.BooleanField(null=True)),
                ('spoiler', models.BooleanField(null=True)),
                ('author_is_gold', models.BooleanField(null=True)),
                ('author_mod', models.BooleanField(null=True)),
                ('author_has_verified_email', models.BooleanField(null=True)),
                ('permalink', models.CharField(max_length=300, null=True)),
                ('author', models.CharField(max_length=300)),
                ('author_created', models.DateTimeField()),
                ('comment_karma', models.IntegerField(null=True)),
                ('subreddit', models.CharField(default='pakistan', editable=False, max_length=200)),
            ],
            options={
                'verbose_name_plural': 'Pakistan Subreddit Posts',
                'ordering': ['created_on'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PalestinePosts',
            fields=[
                ('id', models.CharField(db_index=True, max_length=20, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=300)),
                ('content', models.TextField(null=True)),
                ('upvote_ratio', models.FloatField(null=True)),
                ('score', models.IntegerField(null=True)),
                ('num_comments', models.IntegerField(null=True)),
                ('created_on', models.DateTimeField()),
                ('stickied', models.BooleanField(null=True)),
                ('over_18', models.BooleanField(null=True)),
                ('spoiler', models.BooleanField(null=True)),
                ('author_is_gold', models.BooleanField(null=True)),
                ('author_mod', models.BooleanField(null=True)),
                ('author_has_verified_email', models.BooleanField(null=True)),
                ('permalink', models.CharField(max_length=300, null=True)),
                ('author', models.CharField(max_length=300)),
                ('author_created', models.DateTimeField()),
                ('comment_karma', models.IntegerField(null=True)),
                ('subreddit', models.CharField(default='Palestine', editable=False, max_length=200)),
            ],
            options={
                'verbose_name_plural': 'Palestine Subreddit Posts',
                'ordering': ['created_on'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PoliticsPosts',
            fields=[
                ('id', models.CharField(db_index=True, max_length=20, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=300)),
                ('content', models.TextField(null=True)),
                ('upvote_ratio', models.FloatField(null=True)),
                ('score', models.IntegerField(null=True)),
                ('num_comments', models.IntegerField(null=True)),
                ('created_on', models.DateTimeField()),
                ('stickied', models.BooleanField(null=True)),
                ('over_18', models.BooleanField(null=True)),
                ('spoiler', models.BooleanField(null=True)),
                ('author_is_gold', models.BooleanField(null=True)),
                ('author_mod', models.BooleanField(null=True)),
                ('author_has_verified_email', models.BooleanField(null=True)),
                ('permalink', models.CharField(max_length=300, null=True)),
                ('author', models.CharField(max_length=300)),
                ('author_created', models.DateTimeField()),
                ('comment_karma', models.IntegerField(null=True)),
                ('subreddit', models.CharField(default='politics', editable=False, max_length=200)),
            ],
            options={
                'verbose_name_plural': 'Politics Subreddit Posts',
                'ordering': ['created_on'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProgressivePosts',
            fields=[
                ('id', models.CharField(db_index=True, max_length=20, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=300)),
                ('content', models.TextField(null=True)),
                ('upvote_ratio', models.FloatField(null=True)),
                ('score', models.IntegerField(null=True)),
                ('num_comments', models.IntegerField(null=True)),
                ('created_on', models.DateTimeField()),
                ('stickied', models.BooleanField(null=True)),
                ('over_18', models.BooleanField(null=True)),
                ('spoiler', models.BooleanField(null=True)),
                ('author_is_gold', models.BooleanField(null=True)),
                ('author_mod', models.BooleanField(null=True)),
                ('author_has_verified_email', models.BooleanField(null=True)),
                ('permalink', models.CharField(max_length=300, null=True)),
                ('author', models.CharField(max_length=300)),
                ('author_created', models.DateTimeField()),
                ('comment_karma', models.IntegerField(null=True)),
                ('subreddit', models.CharField(default='progressive', editable=False, max_length=200)),
            ],
            options={
                'verbose_name_plural': 'Progressive Subreddit Posts',
                'ordering': ['created_on'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RealTechPosts',
            fields=[
                ('id', models.CharField(db_index=True, max_length=20, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=300)),
                ('content', models.TextField(null=True)),
                ('upvote_ratio', models.FloatField(null=True)),
                ('score', models.IntegerField(null=True)),
                ('num_comments', models.IntegerField(null=True)),
                ('created_on', models.DateTimeField()),
                ('stickied', models.BooleanField(null=True)),
                ('over_18', models.BooleanField(null=True)),
                ('spoiler', models.BooleanField(null=True)),
                ('author_is_gold', models.BooleanField(null=True)),
                ('author_mod', models.BooleanField(null=True)),
                ('author_has_verified_email', models.BooleanField(null=True)),
                ('permalink', models.CharField(max_length=300, null=True)),
                ('author', models.CharField(max_length=300)),
                ('author_created', models.DateTimeField()),
                ('comment_karma', models.IntegerField(null=True)),
                ('subreddit', models.CharField(default='realtech', editable=False, max_length=200)),
            ],
            options={
                'verbose_name_plural': 'Realtech Subreddit Posts',
                'ordering': ['created_on'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SingaporePosts',
            fields=[
                ('id', models.CharField(db_index=True, max_length=20, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=300)),
                ('content', models.TextField(null=True)),
                ('upvote_ratio', models.FloatField(null=True)),
                ('score', models.IntegerField(null=True)),
                ('num_comments', models.IntegerField(null=True)),
                ('created_on', models.DateTimeField()),
                ('stickied', models.BooleanField(null=True)),
                ('over_18', models.BooleanField(null=True)),
                ('spoiler', models.BooleanField(null=True)),
                ('author_is_gold', models.BooleanField(null=True)),
                ('author_mod', models.BooleanField(null=True)),
                ('author_has_verified_email', models.BooleanField(null=True)),
                ('permalink', models.CharField(max_length=300, null=True)),
                ('author', models.CharField(max_length=300)),
                ('author_created', models.DateTimeField()),
                ('comment_karma', models.IntegerField(null=True)),
                ('subreddit', models.CharField(default='singapore', editable=False, max_length=200)),
            ],
            options={
                'verbose_name_plural': 'Singapore Subreddit Posts',
                'ordering': ['created_on'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SocialismPosts',
            fields=[
                ('id', models.CharField(db_index=True, max_length=20, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=300)),
                ('content', models.TextField(null=True)),
                ('upvote_ratio', models.FloatField(null=True)),
                ('score', models.IntegerField(null=True)),
                ('num_comments', models.IntegerField(null=True)),
                ('created_on', models.DateTimeField()),
                ('stickied', models.BooleanField(null=True)),
                ('over_18', models.BooleanField(null=True)),
                ('spoiler', models.BooleanField(null=True)),
                ('author_is_gold', models.BooleanField(null=True)),
                ('author_mod', models.BooleanField(null=True)),
                ('author_has_verified_email', models.BooleanField(null=True)),
                ('permalink', models.CharField(max_length=300, null=True)),
                ('author', models.CharField(max_length=300)),
                ('author_created', models.DateTimeField()),
                ('comment_karma', models.IntegerField(null=True)),
                ('subreddit', models.CharField(default='socialism', editable=False, max_length=200)),
            ],
            options={
                'verbose_name_plural': 'Socialism Subreddit Posts',
                'ordering': ['created_on'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SpacePosts',
            fields=[
                ('id', models.CharField(db_index=True, max_length=20, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=300)),
                ('content', models.TextField(null=True)),
                ('upvote_ratio', models.FloatField(null=True)),
                ('score', models.IntegerField(null=True)),
                ('num_comments', models.IntegerField(null=True)),
                ('created_on', models.DateTimeField()),
                ('stickied', models.BooleanField(null=True)),
                ('over_18', models.BooleanField(null=True)),
                ('spoiler', models.BooleanField(null=True)),
                ('author_is_gold', models.BooleanField(null=True)),
                ('author_mod', models.BooleanField(null=True)),
                ('author_has_verified_email', models.BooleanField(null=True)),
                ('permalink', models.CharField(max_length=300, null=True)),
                ('author', models.CharField(max_length=300)),
                ('author_created', models.DateTimeField()),
                ('comment_karma', models.IntegerField(null=True)),
                ('subreddit', models.CharField(default='HongKong', editable=False, max_length=200)),
            ],
            options={
                'verbose_name_plural': 'Space Subreddit Posts',
                'ordering': ['created_on'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TaiwanPosts',
            fields=[
                ('id', models.CharField(db_index=True, max_length=20, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=300)),
                ('content', models.TextField(null=True)),
                ('upvote_ratio', models.FloatField(null=True)),
                ('score', models.IntegerField(null=True)),
                ('num_comments', models.IntegerField(null=True)),
                ('created_on', models.DateTimeField()),
                ('stickied', models.BooleanField(null=True)),
                ('over_18', models.BooleanField(null=True)),
                ('spoiler', models.BooleanField(null=True)),
                ('author_is_gold', models.BooleanField(null=True)),
                ('author_mod', models.BooleanField(null=True)),
                ('author_has_verified_email', models.BooleanField(null=True)),
                ('permalink', models.CharField(max_length=300, null=True)),
                ('author', models.CharField(max_length=300)),
                ('author_created', models.DateTimeField()),
                ('comment_karma', models.IntegerField(null=True)),
                ('subreddit', models.CharField(default='taiwan', editable=False, max_length=200)),
            ],
            options={
                'verbose_name_plural': 'Taiwan Subreddit Posts',
                'ordering': ['created_on'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TechnologyPosts',
            fields=[
                ('id', models.CharField(db_index=True, max_length=20, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=300)),
                ('content', models.TextField(null=True)),
                ('upvote_ratio', models.FloatField(null=True)),
                ('score', models.IntegerField(null=True)),
                ('num_comments', models.IntegerField(null=True)),
                ('created_on', models.DateTimeField()),
                ('stickied', models.BooleanField(null=True)),
                ('over_18', models.BooleanField(null=True)),
                ('spoiler', models.BooleanField(null=True)),
                ('author_is_gold', models.BooleanField(null=True)),
                ('author_mod', models.BooleanField(null=True)),
                ('author_has_verified_email', models.BooleanField(null=True)),
                ('permalink', models.CharField(max_length=300, null=True)),
                ('author', models.CharField(max_length=300)),
                ('author_created', models.DateTimeField()),
                ('comment_karma', models.IntegerField(null=True)),
                ('subreddit', models.CharField(default='technology', editable=False, max_length=200)),
            ],
            options={
                'verbose_name_plural': 'Technology Subreddit Posts',
                'ordering': ['created_on'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TechPosts',
            fields=[
                ('id', models.CharField(db_index=True, max_length=20, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=300)),
                ('content', models.TextField(null=True)),
                ('upvote_ratio', models.FloatField(null=True)),
                ('score', models.IntegerField(null=True)),
                ('num_comments', models.IntegerField(null=True)),
                ('created_on', models.DateTimeField()),
                ('stickied', models.BooleanField(null=True)),
                ('over_18', models.BooleanField(null=True)),
                ('spoiler', models.BooleanField(null=True)),
                ('author_is_gold', models.BooleanField(null=True)),
                ('author_mod', models.BooleanField(null=True)),
                ('author_has_verified_email', models.BooleanField(null=True)),
                ('permalink', models.CharField(max_length=300, null=True)),
                ('author', models.CharField(max_length=300)),
                ('author_created', models.DateTimeField()),
                ('comment_karma', models.IntegerField(null=True)),
                ('subreddit', models.CharField(default='tech', editable=False, max_length=200)),
            ],
            options={
                'verbose_name_plural': 'Tech Subreddit Posts',
                'ordering': ['created_on'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ThailandPosts',
            fields=[
                ('id', models.CharField(db_index=True, max_length=20, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=300)),
                ('content', models.TextField(null=True)),
                ('upvote_ratio', models.FloatField(null=True)),
                ('score', models.IntegerField(null=True)),
                ('num_comments', models.IntegerField(null=True)),
                ('created_on', models.DateTimeField()),
                ('stickied', models.BooleanField(null=True)),
                ('over_18', models.BooleanField(null=True)),
                ('spoiler', models.BooleanField(null=True)),
                ('author_is_gold', models.BooleanField(null=True)),
                ('author_mod', models.BooleanField(null=True)),
                ('author_has_verified_email', models.BooleanField(null=True)),
                ('permalink', models.CharField(max_length=300, null=True)),
                ('author', models.CharField(max_length=300)),
                ('author_created', models.DateTimeField()),
                ('comment_karma', models.IntegerField(null=True)),
                ('subreddit', models.CharField(default='Thailand', editable=False, max_length=200)),
            ],
            options={
                'verbose_name_plural': 'Thailand Subreddit Posts',
                'ordering': ['created_on'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UKPoliticsPosts',
            fields=[
                ('id', models.CharField(db_index=True, max_length=20, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=300)),
                ('content', models.TextField(null=True)),
                ('upvote_ratio', models.FloatField(null=True)),
                ('score', models.IntegerField(null=True)),
                ('num_comments', models.IntegerField(null=True)),
                ('created_on', models.DateTimeField()),
                ('stickied', models.BooleanField(null=True)),
                ('over_18', models.BooleanField(null=True)),
                ('spoiler', models.BooleanField(null=True)),
                ('author_is_gold', models.BooleanField(null=True)),
                ('author_mod', models.BooleanField(null=True)),
                ('author_has_verified_email', models.BooleanField(null=True)),
                ('permalink', models.CharField(max_length=300, null=True)),
                ('author', models.CharField(max_length=300)),
                ('author_created', models.DateTimeField()),
                ('comment_karma', models.IntegerField(null=True)),
                ('subreddit', models.CharField(default='ukpolitics', editable=False, max_length=200)),
            ],
            options={
                'verbose_name_plural': 'UK Politics Subreddit Posts',
                'ordering': ['created_on'],
                'abstract': False,
            },
        ),
        migrations.RenameModel(
            old_name='SubredditPostModel',
            new_name='WorldNewsPosts',
        ),
        migrations.AlterModelOptions(
            name='worldnewsposts',
            options={'ordering': ['created_on'], 'verbose_name_plural': 'World News Subreddit Posts'},
        ),
    ]
